/** 
 * Events are scheduled with increasing additional delays of 0, 100, 300, 600
 * msec on a logical action with a minimum delay of 100 msec.  
 * The use of the logical action ensures the elapsed time jumps exactly from
 * 0 to 100, 300, 600, and 1000 msec.
 */
target Cpp {
    timeout: 1s,
    fast: true,
};

main reactor(start:time(100 msec), incr:time(100 msec)) {
    logical action a;
    state interval:time(start);
    state expected_time:time(start);

    reaction(startup) -> a {=
        a.schedule(start);
    =}

    reaction(a) -> a {=
        auto elapsed_logical_time = get_elapsed_logical_time();
        std::cout << "Logical time since start: " << elapsed_logical_time << " nsec" << std::endl;

        if (elapsed_logical_time != expected_time) {
            std::cerr << "ERROR: Expected time to be: " << expected_time << " nsec" << std::endl;
            exit(1);
        }

        interval += incr;
        a.schedule(interval);
        expected_time += interval;
    =}

    reaction(shutdown) {=
        if (expected_time != 1500ms) {
            std::cerr << "ERROR: Expected the next expected time to be: 1500000000 nsec." << std::endl;
            std::cerr << "It was: " << expected_time <<" nsec." << std::endl;
            exit(2);
        } else {
            std::cout << "Test passes" << std::endl;
        }
    =}
}
